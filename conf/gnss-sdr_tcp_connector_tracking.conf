
[GNSS-SDR]

;######### GLOBAL OPTIONS ##################
;internal_fs_hz: Internal signal sampling frequency after the signal conditioning stage [Hz].
GNSS-SDR.internal_fs_hz=4000000

;######### CONTROL_THREAD CONFIG ############
ControlThread.wait_for_flowgraph=false

;######### SIGNAL_SOURCE CONFIG ############
;#implementation: Use File_Signal_Source or UHD_Signal_Source or GN3S_Signal_Source (experimental)
SignalSource.implementation=File_Signal_Source

;#filename: path to file with the captured GNSS signal samples to be processed
SignalSource.filename=/home/engunit/workspace/cap2/agilent_cap2.dat

;#item_type: Type and resolution for each of the signal samples. Use only gr_complex in this version.
SignalSource.item_type=gr_complex

;#sampling_frequency: Original Signal sampling frequency in [Hz] 
SignalSource.sampling_frequency=4000000
;SignalSource.sampling_frequency=100000000

;#freq: RF front-end center frequency in [Hz] 
SignalSource.freq=1575420000

;#gain: Front-end Gain in [dB] 
SignalSource.gain=50

;#subdevice: UHD subdevice specification (for USRP1 use A:0 or B:0)
SignalSource.subdevice=B:0

;#samples: Number of samples to be processed. Notice that 0 indicates the entire file.
SignalSource.samples=0

;#repeat: Repeat the processing file. Disable this option in this version
SignalSource.repeat=false

;#dump: Dump the Signal source data to a file. Disable this option in this version
SignalSource.dump=false

SignalSource.dump_filename=../data/signal_source.dat

SignalSource.dump_filename=../data/SignalSource.dat

;#enable_throttle_control: Enabling this option tells the signal source to keep the delay between samples in post processing.
; it helps to not overload the CPU, but the processing time will be longer. 
SignalSource.enable_throttle_control=false


;######### SIGNAL_CONDITIONER CONFIG ############
;## It holds blocks to change data type, filter and resample input data. 
;#implementation: Pass_Through disables this block
SignalConditioner.implementation=Pass_Through

;######### DATA_TYPE_ADAPTER CONFIG ############
;## Changes the type of input data. Please disable it in this version.
;#implementation: Pass_Through disables this block
DataTypeAdapter.implementation=Pass_Through

;######### INPUT_FILTER CONFIG ############
;## Filter the input data. Can be combined with frequency translation for IF signals

;#implementation: Pass_Through disables this block
;InputFilter.implementation=Fir_Filter
InputFilter.implementation=Pass_Through

;#dump: Dump the filtered data to a file.
InputFilter.dump=false

;#dump_filename: Log path and filename.
InputFilter.dump_filename=../data/input_filter.dat

;#The following options are used in the filter design of Fir_Filter implementation. 
;#These options are based on parameters of gnuradio's function: gr_remez.
;#These function calculates the optimal (in the Chebyshev/minimax sense) FIR filter inpulse reponse given a set of band edges, the desired reponse on those bands, and the weight given to the error in those bands.

;#input_item_type: Type and resolution for input signal samples. Use only gr_complex in this version.
InputFilter.input_item_type=gr_complex

;#outut_item_type: Type and resolution for output filtered signal samples. Use only gr_complex in this version.
InputFilter.output_item_type=gr_complex

;#taps_item_type: Type and resolution for the taps of the filter. Use only float in this version.
InputFilter.taps_item_type=float

;#number_of_taps: Number of taps in the filter. Increasing this parameter increases the processing time
InputFilter.number_of_taps=5

;#number_of _bands: Number of frequency bands in the filter.
InputFilter.number_of_bands=2

;#bands: frequency at the band edges [ b1 e1 b2 e2 b3 e3 ...].
;#Frequency is in the range [0, 1], with 1 being the Nyquist frequency (Fs/2)
;#The number of band_begin and band_end elements must match the number of bands

InputFilter.band1_begin=0.0
InputFilter.band1_end=0.45
InputFilter.band2_begin=0.55
InputFilter.band2_end=1.0

;#ampl: desired amplitude at the band edges [ a(b1) a(e1) a(b2) a(e2) ...].
;#The number of ampl_begin and ampl_end elements must match the number of bands

InputFilter.ampl1_begin=1.0
InputFilter.ampl1_end=1.0
InputFilter.ampl2_begin=0.0
InputFilter.ampl2_end=0.0

;#band_error: weighting applied to each band (usually 1).
;#The number of band_error elements must match the number of bands
InputFilter.band1_error=1.0
InputFilter.band2_error=1.0

;#filter_type: one of "bandpass", "hilbert" or "differentiator" 
InputFilter.filter_type=bandpass

;#grid_density: determines how accurately the filter will be constructed.
;The minimum value is 16; higher values are slower to compute the filter.
InputFilter.grid_density=16

;######### RESAMPLER CONFIG ############
;## Resamples the input data. 

;#implementation: Pass_Through disables this block
Resampler.implementation=Direct_Resampler
;Resampler.implementation=Pass_Through

;#dump: Dump the filtered data to a file.
InputFilter.dump=false
;#dump_filename: Log path and filename.
InputFilter.dump=../data/resampler.dat

;#item_type: Type and resolution for each of the signal samples. Use only gr_complex in this version.
Resampler.item_type=gr_complex

;#sample_freq_in: the sample frequency of the input signal
Resampler.sample_freq_in=4000000

;#sample_freq_out: the desired sample frequency of the output signal
Resampler.sample_freq_out=4000000


;######### CHANNELS GLOBAL CONFIG ############
;#count: Number of available satellite channels.
Channels.count=7
Channels.in_acquisition=7

;######### CHANNEL 0 CONFIG ############
;#system: GPS, GLONASS, GALILEO, SBAS or COMPASS
;#if the option is disabled by default is assigned GPS
Channel0.system=GPS

;#signal: 
;# "1C" GPS L1 C/A
;# "1P" GPS L1 P
;# "1W" GPS L1 Z-tracking and similar (AS on)
;# "1Y" GPS L1 Y
;# "1M" GPS L1 M
;# "1N" GPS L1 codeless
;# "2C" GPS L2 C/A
;# "2D" GPS L2 L1(C/A)+(P2-P1) semi-codeless
;# "2S" GPS L2 L2C (M)
;# "2L" GPS L2 L2C (L)
;# "2X" GPS L2 L2C (M+L)
;# "2P" GPS L2 P
;# "2W" GPS L2 Z-tracking and similar (AS on)
;# "2Y" GPS L2 Y
;# "2M" GPS GPS L2 M
;# "2N" GPS L2 codeless
;# "5I" GPS L5 I
;# "5Q" GPS L5 Q
;# "5X" GPS L5 I+Q
;# "1C" GLONASS G1 C/A
;# "1P" GLONASS G1 P
;# "2C" GLONASS G2 C/A  (Glonass M)
;# "2P" GLONASS G2 P
;# "1A" GALILEO E1 A (PRS)
;# "1B" GALILEO E1 B (I/NAV OS/CS/SoL)
;# "1C" GALILEO E1 C (no data)
;# "1X" GALILEO E1 B+C
;# "1Z" GALILEO E1 A+B+C
;# "5I" GALILEO E5a I (F/NAV OS)
;# "5Q" GALILEO E5a Q  (no data)
;# "5X" GALILEO E5a I+Q
;# "7I" GALILEO E5b I
;# "7Q" GALILEO E5b Q
;# "7X" GALILEO E5b I+Q
;# "8I" GALILEO E5 I
;# "8Q" GALILEO E5 Q
;# "8X" GALILEO E5 I+Q
;# "6A" GALILEO E6 A
;# "6B" GALILEO E6 B
;# "6C" GALILEO E6 C
;# "6X" GALILEO E6 B+C
;# "6Z" GALILEO E6 A+B+C
;# "1C" SBAS L1 C/A
;# "5I" SBAS L5 I
;# "5Q" SBAS L5 Q
;# "5X" SBAS L5 I+Q
;# "2I" COMPASS E2 I
;# "2Q" COMPASS E2 Q
;# "2X" COMPASS E2 IQ
;# "7I" COMPASS E5b I
;# "7Q" COMPASS E5b Q
;# "7X" COMPASS E5b IQ
;# "6I" COMPASS E6 I
;# "6Q" COMPASS E6 Q
;# "6X" COMPASS E6 IQ
;#if the option is disabled by default is assigned "1C" GPS L1 C/A
Channel0.signal=1C

;#satellite: Satellite PRN ID for this channel. Disable this option to random search
;Channel0.satellite=15
;Channel0.repeat_satellite=true

;######### CHANNEL 1 CONFIG ############

Channel1.system=GPS
Channel1.signal=1C
;Channel1.satellite=18
;Channel1.repeat_satellite=true

;######### CHANNEL 2 CONFIG ############

Channel2.system=GPS
Channel2.signal=1C
;Channel2.satellite=16
;Channel2.repeat_satellite=true

;######### CHANNEL 3 CONFIG ############

Channel3.system=GPS
Channel3.signal=1C
;Channel3.satellite=23
;Channel3.repeat_satellite=true

;######### CHANNEL 4 CONFIG ############

Channel4.system=GPS
Channel4.signal=1C
;Channel4.satellite=3
;Channel4.repeat_satellite=true

;######### CHANNEL 3 CONFIG ############

Channel5.system=GPS
Channel5.signal=1C
;Channel5.satellite=21
;Channel5.repeat_satellite=true


;######### ACQUISITION GLOBAL CONFIG ############

;#dump: Enable or disable the acquisition internal data file logging [true] or [false] 
Acquisition.dump=false
;#filename: Log path and filename
Acquisition.dump_filename=./acq_dump.dat
;#item_type: Type and resolution for each of the signal samples. Use only gr_complex in this version.
Acquisition.item_type=gr_complex
;#if: Signal intermediate frequency in [Hz] 
Acquisition.if=0
;#sampled_ms: Signal block duration for the acquisition signal detection [ms]
Acquisition.sampled_ms=1

;######### ACQUISITION CHANNELS CONFIG ######

;######### ACQUISITION CH 0 CONFIG ############
;#implementation: Acquisition algorithm selection for this channel: [GPS_L1_CA_PCPS_Acquisition]
Acquisition0.implementation=GPS_L1_CA_PCPS_Acquisition
;#threshold: Acquisition threshold
Acquisition0.threshold=100
;#doppler_max: Maximum expected Doppler shift [Hz]
Acquisition0.doppler_max=10000
;#doppler_max: Doppler step in the grid search [Hz]
Acquisition0.doppler_step=250
;#repeat_satellite: Use only jointly with the satellite PRN ID option. 


;######### ACQUISITION CH 1 CONFIG ############
Acquisition1.implementation=GPS_L1_CA_PCPS_Acquisition
Acquisition1.threshold=100
Acquisition1.doppler_max=10000
Acquisition1.doppler_step=250


;######### ACQUISITION CH 2 CONFIG ############
Acquisition2.implementation=GPS_L1_CA_PCPS_Acquisition
Acquisition2.threshold=100
Acquisition2.doppler_max=10000
Acquisition2.doppler_step=250


;######### ACQUISITION CH 3 CONFIG ############
Acquisition3.implementation=GPS_L1_CA_PCPS_Acquisition
Acquisition3.threshold=100
Acquisition3.doppler_max=10000
Acquisition3.doppler_step=250


;######### ACQUISITION CH 4 CONFIG ############
Acquisition4.implementation=GPS_L1_CA_PCPS_Acquisition
Acquisition4.threshold=100
Acquisition4.doppler_max=10000
Acquisition4.doppler_step=250


;######### ACQUISITION CH 5 CONFIG ############
Acquisition5.implementation=GPS_L1_CA_PCPS_Acquisition
Acquisition5.threshold=100
Acquisition5.doppler_max=10000
Acquisition5.doppler_step=250


;######### ACQUISITION CH 6 CONFIG ############
Acquisition6.implementation=GPS_L1_CA_PCPS_Acquisition
Acquisition6.threshold=100
Acquisition6.doppler_max=10000
Acquisition6.doppler_step=250


;######### ACQUISITION CH 7 CONFIG ############
Acquisition7.implementation=GPS_L1_CA_PCPS_Acquisition
Acquisition7.threshold=100
Acquisition7.doppler_max=10000
Acquisition7.doppler_step=250


;######### ACQUISITION CH 8 CONFIG ############
Acquisition8.implementation=GPS_L1_CA_PCPS_Acquisition
Acquisition8.threshold=100
Acquisition8.doppler_max=10000
Acquisition8.doppler_step=250



;######### TRACKING GLOBAL CONFIG ############

;#implementatiion: Selected tracking algorithm: [GPS_L1_CA_DLL_PLL_Tracking], [GPS_L1_CA_DLL_FLL_PLL_Tracking] or [GPS_L1_CA_TCP_CONNECTOR_Tracking]
Tracking.implementation= GPS_L1_CA_TCP_CONNECTOR_Tracking
;Tracking.implementation=GPS_L1_CA_DLL_FLL_PLL_Tracking
;#item_type: Type and resolution for each of the signal samples. Use only [gr_complex] in this version.
Tracking.item_type=gr_complex

;#sampling_frequency: Signal Intermediate Frequency in [Hz] 
Tracking.if=0

;#dump: Enable or disable the Tracking internal binary data file logging [true] or [false] 
Tracking.dump=false

;#dump_filename: Log path and filename. Notice that the tracking channel will add "x.dat" where x is the channel number.
Tracking.dump_filename=./tracking_ch_

;#pll_bw_hz: PLL loop filter bandwidth [Hz]
Tracking.pll_bw_hz=50.0;

;#dll_bw_hz: DLL loop filter bandwidth [Hz]
Tracking.dll_bw_hz=2.0;

;#fll_bw_hz: FLL loop filter bandwidth [Hz]
Tracking.fll_bw_hz=10.0;

;#order: PLL/DLL loop filter order [2] or [3]
Tracking.order=2;

;#early_late_space_chips: correlator early-late space [chips]. Use [0.5]
Tracking.early_late_space_chips=0.5;

;#port_ch0: local TCP port for channel 0
Tracking.port_ch0=2070;

;######### TELEMETRY DECODER CONFIG ############
;#implementation: Use [GPS_L1_CA_Telemetry_Decoder] for GPS L1 C/A.
TelemetryDecoder.implementation=GPS_L1_CA_Telemetry_Decoder
TelemetryDecoder.dump=false

;######### OBSERVABLES CONFIG ############
;#implementation: Use [GPS_L1_CA_Observables] for GPS L1 C/A.
Observables.implementation=GPS_L1_CA_Observables

;#dump: Enable or disable the Observables internal binary data file logging [true] or [false] 
Observables.dump=false

;#dump_filename: Log path and filename.
Observables.dump_filename=./observables.dat


;######### PVT CONFIG ############
;#implementation: Position Velocity and Time (PVT) implementation algorithm: Use [GPS_L1_CA_PVT] in this version.
PVT.implementation=GPS_L1_CA_PVT

;#averaging_depth: Number of PVT observations in the moving average algorithm
;PVT.averaging_depth=100
PVT.averaging_depth=2

;#flag_average: Enables the PVT averaging between output intervals (arithmetic mean) [true] or [false] 
PVT.flag_averaging=true

;#output_rate_ms: Period between two PVT outputs. Notice that the minimum period is equal to the tracking integration time (for GPS CA L1 is 1ms) [ms]
PVT.output_rate_ms=100;

;#display_rate_ms: Position console print (std::out) interval [ms]. Notice that output_rate_ms<=display_rate_ms.
PVT.display_rate_ms=500;

;#dump: Enable or disable the PVT internal binary data file logging [true] or [false] 
PVT.dump=false

;#dump_filename: Log path and filename without extension. Notice that PVT will add ".dat" to the binary dump and ".kml" to GoogleEarth dump.
PVT.dump_filename=./PVT

;######### OUTPUT_FILTER CONFIG ############
;# Receiver output filter: Leave this block disabled in this version
OutputFilter.implementation=Null_Sink_Output_Filter
OutputFilter.filename=data/gnss-sdr.dat
OutputFilter.item_type=gr_complex